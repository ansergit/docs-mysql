---
title: Installing and Configuring MySQL for PCF
owner: MySQL
---

This topic provides instructions to operators of Pivotal Cloud Foundry (PCF) about how to install, configure, and deploy the MySQL for PCF v2.3 tile.
The MySQL for PCF v2.3 service lets PCF developers create and use their own MySQL service instances on demand.

## <a id="rbac"></a>Role-Based Access in Ops Manager

Ops Manager administrators can use Role-Based Access Control (RBAC) to manage which 
operators can make deployment changes, view credentials, and manage user roles in Ops Manager. 
Therefore, your role permissions might not allow you to perform every procedure in this operator guide.

For more information about roles in Ops Manager, see 
    <a href="https://docs.pivotal.io/pivotalcf/opsguide/config-rbac.html#about">
        Understand Roles in Ops Manager</a>.</p>

## <a id="prereq"></a> Prepare Your Ops Manager and PCF Installation for MySQL for PCF

Before you download and install the MySQL for PCF tile, complete the following procedures:

+ [Create an Application Security Group for MySQL for PCF](#asg)
+ [Enable the Ops Manager Resurrector](#resurrector)
+ [(Optional) Preparing for TLS](prepare-tls.html): 
Only required if you want to enable TLS. 

### <a id="asg"></a> Create an Application Security Group for MySQL for PCF

To let apps running on Cloud Foundry communicate with the MySQL service network, you must create an Application Security Group (ASG).

The ASG allows smoke tests to run when you first install the MySQL for PCF service and allows apps to access the service after it is installed.

The example below follows [this procedure](http://docs.pivotal.io/pivotalcf/1-11/concepts/asg.html#asg-individual) to create an ASG.

To create an ASG for MySQL for PCF, do the following:</br>

1. Navigate to the Ops Manager Installation Dashboard and click the **Ops Manager Director** tile.

1. Click **Create Networks**.</br>
    ![Create Networks page](opsman-dir-networks.png)

1. Find the network that has **Service Network** checked, and find the **CIDR** that you can use in your ASGs.
    </br>
    ![Reserved IP Ranges](opsman-dir-reserved-ips.png)

1. Using the CIDR that you found in the above step, create a JSON file `mysql-asg.json` with the configuration below:

    ```json
    [
      {
        "protocol": "tcp",
        "destination": "CIDR",
        "ports": "3306"
      }
    ]
    ```
    If you are using Pivotal Application Service (PAS) v2.0.x or later and want to store your service instance credentials in runtime CredHub,
    you must also open port `8844` in addition to performing the steps
    in [Configure Secure Service Instance Credentials](#security-service-instance-creds) below.
    Modify the JSON file above to include `"ports": "3306", "8844"`.

1. Use the CF CLI and the JSON file that you created to create an ASG called `p.mysql`:

    ```
    $ cf create-security-group p.mysql ./mysql-asg.json
    ```

1. Bind the ASG to the appropriate space or, to give all started apps access, bind to the `default-running` ASG set:

     ```
    $ cf bind-running-security-group p.mysql
    ```

### <a id="resurrector"></a> Enable the Ops Manager Resurrector

The [Ops Manager Resurrector](https://docs.pivotal.io/pivotalcf/1-10/customizing/resurrector.html)
increases the availability of MySQL for PCF by restarting and resuming MySQL service in the following ways:

- Reacts to hardware failure and network disruptions by restarting VMs on active, stable hosts
- Detects operating system failures by continuously monitoring VMs and restarting them as required
- Continuously monitors the BOSH Agent running on each service instance VM and restarts the VM as required

Pivotal recommends enabling the Ops Manager Resurrector when installing MySQL for PCF. To enable the Ops Manager Resurrector,
do the following:

1. Navigate to the Ops Manager Installation Dashboard and click the **Ops Manager Director** tile.

2. Click **Director Config**.

3. Select the **Enable VM Resurrector Plugin** checkbox.

4. Click **Save**.

For general information about the Ops Manager Resurrector,
see [Using Ops Manager Resurrector](https://docs.pivotal.io/pivotalcf/customizing/resurrector.html#enabling)

## <a id="install"></a> Download and Install the Tile

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/pivotal-mysql/).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file. 

1. Under the **Import a Product** button, click **+** next to the version number of MySQL for PCF. 
   This adds the tile to your staging area.

1. Click the newly-added **MySQL for PCF** tile to open its configuration panes.

    ![AZ and Network Assignments pane](config-azs.png)

## <a id="config-on-demand"></a> Configure the Tile

Follow the steps below to configure the MySQL for PCF service. 
MySQL for PCF v2.3 has five service plans that deploy dedicated MySQL service instances on demand.

By default, plans 1-3 are active and plans 4 and 5 are inactive. The procedures below describe how to change these defaults.

<p class="note"><strong>IMPORTANT:</strong> In order to re-define plans later, you must leave <code>broker de-registrar</code> checked.</p>

###<a id="azs"></a> Configure AZs and Networks

Follow the steps below to choose an availability zone (AZ) to run the service broker and to select networks.

1. Click **Assign AZs and Networks**.

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Place singleton jobs in</strong></td>
        <td>Select the AZ that you want the MySQL broker VM to run in. The broker runs as a singleton job.</td></tr>
    <tr><td><strong>Balance other jobs in</strong></td>
        <td>Ignore; not used.</td></tr>
    <tr><td><strong>Network</strong></td>
        <td>Select a subnet for the MySQL broker. This is typically the same subnet 
            that includes the PAS or Elastic Runtime component VMs.<br>
            This network is represented by the Default Network in this <a href="./about.html#on-demand">picture</a>.
            </td></tr>
    <tr><td><strong>Service Network</strong></td>
        <td>Select the subnet for the on-demand service instances, the Services Network in this <a href="./about.html#on-demand">picture</a>.
            <br >
            If you are adding IPsec to encrypt MySQL communication, Pivotal recommends that you deploy MySQL to its own network
            to avoid conflicts with services that are not IPsec compatible.
         </td></tr>
  </table>
    <p class="note"><strong>IMPORTANT</strong>: You cannot change the regions or networks
    after you click **Apply Changes** in the <a href="#apply-changes">final step</a> below.</p>

1. Click **Save**.

###<a id="active"></a> Configure Service Plans

MySQL for PCF enables you to configure as many as five service plans. 
Each service plan has a corresponding section in the tile configuration, such as **Plan 1**, **Plan 2**, and so on.

By default, the first three plans are active and the fourth and fifth plans are inactive.

Perform the following steps for each plan that you want to use in your PCF deployment:

1. Click the section for the plan. For example, **Plan 1**.

1. Ensure that **Active** is selected.

    ![plan-1-tab-v2.1.0](service-plan-configuration.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Multi-node deployment</strong></td>
        <td>Check the box to configure a leader-follower plan. Leave unchecked to configure each instance as a singleton.
            For more information, see [Configure a Leader-Follower Service Plan](./maintain-leader-follower.html#config-plan).</td></tr>
    <tr><td><strong>Service Plan Access</strong></td>
        <td>Accept the default to enable access to all organizations in your PCF deployment.
            Select **Disable** to disable creating new services instances of this plan for all organizations.
            Select **Manual** to manually control service access with the cf CLI.</td></tr>
    <tr><td><strong>Plan Name</strong></td>
        <td>Accept the default or enter a name. 
            This is the name that appears in the Marketplace for developers.</td></tr>
    <tr><td><strong>Plan Description</strong></td>
        <td>Accept the default or enter a description to help developers understand plan features. 
            Pivotal recommends adding VM type details and disk size to this field.
        </td></tr>
    <tr><td><strong>Plan Quota</strong></td>
        <td>Enter the maximum number of service instances that can exist at one time.</td></tr>
    <tr><td><strong>MySQL VM Type</strong></td>
        <td>Select a VM type. The plan creates service instances of this size.</td></tr>
    <tr><td><strong>MySQL Persistent Disk</strong></td>
        <td>Select a disk size. This disk stores the MySQL messages.
            <p class="note"><strong>Note</strong>: If you intend to enable backups, choose a persistent disk type 
                that is three times larger than the disk you intend to provide to developers.
                For more information, see <a href="backup-and-restore.html">Backing Up and Restoring On-Demand MySQL</a>.</p>
    </td></tr>
    <tr><td><strong>MySQL Availability Zone(s)</strong></td>
        <td>If you check the **Multi-node deployment** box above to enable a leader-follower plan, choose one of the following:
        <ul>
            <li>To leverage the full HA advantages of leader-follower, select two AZs. You must choose AZs different from the one the broker is in.</li>
            <li>To leverage some HA advantages, select one AZ. 
            Using only one AZ for a **Multi-node deployment** greatly reduces the ability to recover from an outage and benefit from such a deployment.</li>
        </ul>
      If you do not check **Multi-node deployment**, select one AZ.
      <p class="note"><strong>Note</strong>: To prevent orphaning a disk, only 
        migrate service instances to a different plan if the new plan includes 
        all of the AZs in the existing plan.</p>
        </td></tr>
  </table>
1. Click **Save**.

<p class="note warning"><strong>WARNING</strong>: If you expect your developers to upgrade from one plan to another, do not place the plans in separate AZs. For example, if you create Plan 1 in AZ1 and Plan 2 in AZ2, developers receive an error and cannot continue if they try to upgrade from Plan 1 to Plan 2. This prevents them from losing their data by orphaning their disk in AZ1.<br><br>To learn how to manually migrate the data from one AZ to another, contact <a href="https://support.pivotal.io/">Pivotal Support</a>.</p>

###<a id="inactive"></a> (Optional) Deactivate Service Plan

Follow the steps below to deactivate a service plan: 

1. If the service plan has existing service instances, perform the following steps:
    1. Click the section for the plan. For example, **Plan 2**.
    1. Under **Service Plan Access**, select **Disable**.
    1. Click **Save**.
    1. Return to the Ops Manager Installation Dashboard and click **Apply Changes** to redeploy.
    1. When the PCF deployment has redeployed, use the cf CLI or Apps Manager to delete all existing service instances on the service plan.
    1. Return to the MySQL for PCF tile configuration.
1. Click the section for the plan. For example, **Plan 2**.
1. Click **Inactive**.

    ![plan-inactive-tab-v2.1.0](service-plan-inactive.png)
1. Click **Save**.

###<a id="global"></a> Configure Global Settings

Follow the steps below to determine if service instances are assigned public IP addresses 
and to set the total number of service instances allowed across all plans. 

1. Click **Settings**.

    ![global-settings](global-settings.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Provide public IP addresses to all Service VMs</strong></td>
        <td>Select this checkbox:<ul>
            <li>If the service instances need an external backup, blobstore, or syslog storage</li>
            <li>If you have configured BOSH to use an external blobstore.</li></ul>
            </td></tr>
    <tr><td><strong>Maximum service instances</strong></td>
        <td>Enter the global quota for all on-demand instances summed across every on-demand plan.
            For information about determining global quotas, see <a href="recommended.html#serviceplan">
            Service Plan Recommended Usage and Limitations</a>.
           </td></tr>
  </table>

1. Click **Save**.

###<a id="mysql"></a> Configure MySQL

Follow the steps below to set MySQL defaults and enable developers to customize their instances:

1. Click **Mysql Configuration**

    ![mysql-config](mysql-config.png)

1. Configure the fields as follows:

  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Enable Lower Case Table Names</strong></td>
        <td>Select this checkbox to store all table names in lowercase. 
            Selecting this sets the MySQL server system variable `lower_case_table_names` to 1 on all MySQL for PCF instances
        by default. To allow developers to override this default, see the checkbox below.
            For more information, see
          [lower_case_table_names](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_lower_case_table_names)
          in the MySQL documentation.
         </td></tr>
    <tr><td><strong>Allow Developers To Override Lower Case Table Names</strong></td>
        <td>Select this checkbox to allow developers to override the default <strong>Enable Lower Case Table Names</strong> value set above, when they are creating a new service instance. 
            For more information, see <a href="./change-default.html#configuring">Optional Parameters for the MySQL for PCF Service Instances</a>.</td></tr>
    <tr><td><strong>Enable Local Infile</strong></td>
        <td>Select this checkbox to enable data downloading from the client's local file system.
            For more information about local data loading capability,
            see [Security Issues with LOAD DATA LOCAL](https://dev.mysql.com/doc/refman/5.7/en/load-data-local.html) in the MySQL 5.7 Reference Manual.
    </td></tr>
  </table>

###<a id="backups"></a> Configure Backups

Follow the steps below to configure automated backups:

<p class="note"><strong>Note:</strong> As of v2.2.0, the MySQL for PCF tile no longer includes the option to disable automated backups. You must configure automated backups.</p>

1. Click **Backups**.

    ![backups](backups.png)

1. Consult [About Automated Backups](backup-and-restore.html#overview) in <em>Backing Up and Restoring</em> to learn about how automated backups work.

1. Select a **Backup configuration** and perform the steps in the appropriate section of <em>Backing Up and Restoring</em>: 
  - [Option 1: Back up with SCP](backup-and-restore.html#scp)---MySQL for PCF runs an SCP command that secure-copies backups to a VM
    or physical machine operating outside of PCF.
    SCP stands for secure copy protocol, and offers a way to securely transfer files between two hosts.
    The operator provisions the backup machine separately from their PCF installation.
    This is the fastest option.
  - [Option 2: Back up to Ceph or S3](backup-and-restore.html#ceph-or-s3)---MySQL for PCF runs an [Amazon S3](https://aws.amazon.com/documentation/s3/) client
    that saves backups to an S3 bucket,
    a [Ceph](http://docs.ceph.com/docs/master/) storage cluster, or another S3-compatible endpoint certified by Pivotal.
  - [Option 3: Back up to GCS](backup-and-restore.html#gcs)---MySQL for PCF runs an [GCS](https://cloud.google.com/storage/) SDK
    that saves backups to an Google Cloud Storage bucket.
  - [Option 4: Back up to Azure Storage](backup-and-restore.html#azure)---MySQL for PCF runs an [Azure](https://docs.microsoft.com/en-us/azure/storage/)
    SDK that saves backups to an Azure storage account.

###<a id="security"></a> Configure Security

Follow the steps below to configure the security settings for the MySQL service. Do one or both of the following:

* To enable TLS for the MySQL service, perform the procedure in [Configure TLS](#security-tls) below. By default, TLS is disabled. 
* To store your service instance credentials in runtime CredHub on PAS v2.0.x or later,
  perform the procedure in [Configure Secure Service Instance Credentials](#security-service-instance-creds) below.

![security](security.png)

####<a id="security-tls"></a> Configure TLS 

To enable TLS for the MySQL service, perform the following steps:

1. Ensure that you have performed the procedures in [Preparing for TLS](prepare-tls.html).
1. Click **Security**.
1. Under **TLS Options**, select one of the following:
    1. **Optional**: This enables developers to configure their MySQL service VMs to use TLS.
    1. **Required**: This enables developers to configure their MySQL service VMs to use TLS, and requires all MySQL service VMs to only accept secure connections.
    <p class="note warning"><strong>WARNING</strong>: Selecting <strong>Required</strong> breaks any apps that are not currently connecting over TLS.</p>
1. Click **Save**.
1. After deploying the tile, notify your developers that they must enable TLS for their service instances and activate TLS for their apps. See [Using TLS](using-tls.html) and [Modifying Apps for TLS](modify-apps-tls.html). 

####<a id="security-service-instance-creds"></a> Configure Secure Service Instance Credentials

If you are using PAS v2.0.x or later and want to store your service instance credentials
in runtime [CredHub](https://docs.pivotal.io/pivotalcf/2-0/credhub/) instead of the Cloud Controller Database (CCDB),
perform the following steps:

1. Ensure that you have configured the PAS tile to support securing service instance credentials in runtime CredHub.
   See [Step 1: Configure the PAS Tile](https://docs.pivotal.io/pivotalcf/2-0/opsguide/secure-si-creds.html#pas-config).
1. Ensure that you have created an ASG that opens port `8884`. See [Create an Application Security Group for MySQL for PCF](#asg) above. 
1. Click **Security**.
1. Select the **Enable Secure Service Instance Credentials** checkbox.
1. Click **Save**.
1. After deploying the tile, notify the developers that they must unbind and rebind any existing service instances bindings if they want to use secure service instance credentials. Perform the following steps:

    1. Unbind the service instance from the app. 
    For example:
    <pre class="terminal">$ cf unbind-service my-app my-service-instance</pre>
    1. Rebind the service instance to the app. 
    For example:
    <pre class="terminal">$ cf bind-service my-app my-service-instance</pre>
    1. Restart the app to apply the new service instance binding. For example:
    <pre class="terminal">$ cf restart my-app</pre>
    1. Print the `VCAP_SERVICES` environment variable to verify that the new service instance binding includes CredHub pointers. 
    For example:
    <pre class="terminal">$ cf env my-app
    Getting env variables for app my-app in org system / space example as admin...
    OK
    System-Provided:
    {
     "VCAP_SERVICES": {
      "p.mysql": [
       {
        "credentials": {
         "credhub-ref": "/c/548966e5-e333-4d65-8773-7b4e3bb6ca97/4a246b0b-83bb-46d0-b8ac-35a93374ae67/caf6e32e-7361-4869-9a57-54ab8ae67b3f/credentials"
        },
    [...]
    </pre>

###<a id="monitoring"></a> Configure Monitoring

Follow the steps below to enable different types of monitoring and logging available in the MySQL service.

1. Click **Monitoring**.

    ![monitoring](monitoring.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Metrics Polling Interval</strong></td>
        <td>Set this time, in seconds, to determine the frequency that the monitor polls for metrics.
            All service instances emit metrics about the health and status of the MySQL server.</td></tr>
    <tr><td><strong>Enable User Statistics Logging</strong></td>
        <td>Select this checkbox to better understand server activity and identify sources of load on a MySQL server.
            For more information about user statistics, see <a href="https://www.percona.com/doc/percona-server/5.7/diagnostics/user_stats.html">
            User Statistics Documentation</a>.
            </td></tr>
    <tr><td><strong>Enable Server Activity Logging</strong></td>
        <td>Select this checkbox to record who connects to the servers and what queries are processed using the Percona Audit Log Plugin.
            For more information, see the <a href="https://www.percona.com/doc/percona-server/5.7/management/audit_log_plugin.html">Percona Documentation</a>.
           </td></tr>
    <tr><td><strong>Enable Read Only Admin User</strong></td>
        <td>Select this checkbox to create a read-only admin user, `roadmin`, on each service instance.
            This user can be used for auditing and monitoring without risking
            mutating or changing any data, because the `roadmin` user cannot make changes.
            <br><br>
            To retrieve the credentials for the `roadmin` user, see [Retrieve Admin and Read-Only Admin Credentials for a Service Instance](troubleshoot.html#instance-creds). The read-only admin user is always `roadmin`, but the password varies by service instance.</td></tr>
  </table>

1. Click **Save**.

###<a id="syslog"></a> Configure System Logging

Follow the steps below to enable system logging for the MySQL broker and service instance VMs. Logs use RFC5424 format.

1. Click **Syslog**.

1. Click **Yes**.

    ![syslog](syslog.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr>
        <td><strong>Address</strong></td>
        <td>Enter the address or host of the syslog server for sending logs, for example, 
            <code>logmanager.example.com</code>.</td></tr>
    <tr><td><strong>Port</strong></td>
        <td>Enter the port of the syslog server for sending logs, for example, <code>29279</code>.</td></tr>
    <tr><td><strong>Transport Protocol</strong></td>
        <td>Select the protocol over which you want system logs. Pivotal recommends using TCP.</td></tr>
    <tr><td><strong>Enable TLS</strong></td>
        <td>If you select TCP, you can also select to send logs encrypted over TLS.</td></tr>
    <tr><td><strong>Permitted Peer</strong></td>
        <td>Enter either the accepted fingerprint, in SHA1, or the name of the remote peer, for example, <code>*.example.com</strong></td></tr>
    <tr><td><strong>SSL Certificate</strong></td>
        <td>Enter the SSL Certificate(s) for the syslog server. This ensures the logs are transported securely.</td></tr>
  </table>
  <p class="note"><strong>IMPORTANT</strong>: If your syslog server is external to PCF, you might need to select
            <strong>Provide public IP addresses to all Service VMs</strong> on the <strong>Settings</strong> page.<p>

1. Click **Save**.

###<a id="stemcell"></a> Verify Stemcell Version and Apply All Changes

Follow the steps below to verify your stemcell version and apply all changes:

1. Depending on your Ops Manager version, navigate to the area where you can manage your stemcell for MySQL for PCF:
    * If you are using Ops Manager v2.0 or earlier, click **Stemcells**.
    * If you are using Ops Manager v2.1 or later, click **Stemcell Library** from the Ops Manager **Installation Dashboard**. 
    For more information about using the Stemcell Library, see [Importing and Managing Stemcells](https://docs.pivotal.io/pivotalcf/opsguide/managing-stemcells.html). 
        <p class="note"><strong>Note</strong>: As of Ops Manager v2.1, operators manage stemcells for all products from the Stemcell Library.</p>

1. Verify and, if necessary, import a new stemcell version. 

1. <a name="apply-changes"></a>Return to the Ops Manager Installation Dashboard and click **Apply Changes**.
